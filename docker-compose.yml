version: '3.7'

services:
  zookeeper:
    image: zookeeper:3.4.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - food-network

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - food-network

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - SECRET_KEY=123456ABC
      - DEBUG=True
      - ALLOWED_HOSTS=*
      - DATABASE_NAME=food_users
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
    volumes:
      - ./auth-service:/app
    networks:
      - food-network

  restaurant-service:
    image: restaurant-service:latest
    container_name: restaurant-service
    build:
      context: ./restaurant-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    environment:
      - SECRET_KEY=123456ABC
      - DEBUG=True
      - ALLOWED_HOSTS=*
      - DATABASE_NAME=food_restaurants
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
    volumes:
      - ./restaurant-service:/app
    networks:
      - food-network

  order-service:
    image: order-service:latest
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    depends_on:
      - postgres
    environment:
      - SECRET_KEY=123456ABC
      - DEBUG=True
      - ALLOWED_HOSTS=*
      - DATABASE_NAME=food_orders
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
    volumes:
      - ./order-service:/app
    networks:
      - food-network

  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - food-network

networks:
  food-network:
    driver: bridge

volumes:
  db-data:
